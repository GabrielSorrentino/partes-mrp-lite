services:

  database:
    image: postgres:alpine
    container_name: databaseMRP # Nombre cambiado para evitar conflictos
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: APP
      POSTGRES_PASSWORD: APP
      POSTGRES_DB: labprog

  # 10.000km

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backendMRP # Nombre cambiado
    volumes:
      - ./backend:/app
      - ../common/backend/m2:/root/.m2
    working_dir: /app
    command: sh run.sh
    ports:
      - 8080:8080
      - 35729:35729
      - 5005:5005
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontendMRP # Nombre cambiado
    working_dir: /home/node/cli
    command: ng serve --host=0.0.0.0
    restart: always
    ports:
      - "4200:4200"
    # stdin_open y tty mantienen el servidor funcionando sin commandos en ejecuci√≥n
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/home/node

  testing:
    image: node:alpine
    container_name: testingMRP # Nombre cambiado
    profiles:
      - test
    working_dir: /home/node
    volumes:
      - ./testing:/home/node
      - ../common/testing/node_modules:/home/node/node_modules
    command: npm test

volumes:
  postgres: